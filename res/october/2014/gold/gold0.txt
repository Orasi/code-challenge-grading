</script><script>
function lcs(lcstest, lcstarget) {
    matchfound = 0;
    results = [];
    lsclen = lcstest.length;
    for(lcsi=0; lcsi<lcstest.length; lcsi++){
        lscos=0;
        for(lcsj=0; lcsj<lcsi+1; lcsj++){
            re = new RegExp("(?:.{" + lscos + "})(.{" + lsclen + "})", "i");
            temp = re.test(lcstest);
            re = new RegExp("(" + RegExp.$1 + ")");
            if(re.test(lcstarget)){
                matchfound=1;
                result = RegExp.$1;
                results[results.length] = result;
            }
            lscos = lscos + 1;
        }

        lsclen = lsclen - 1;
    }
    result = "";
    return results;
}

function toUnique(a,b,c){               //array,placeholder,placeholder
 b=a.length;while(c=--b)while(c--)a[b]!==a[c]||a.splice(c,1)
}

function goldjs(input){
    input = input.split("<|>");
    for (i=0; i<input.length;i++){
        input[i] = input[i].replace(/[^\w]/gi, '');
    }
    arr_len = input.length;
    match_array = lcs(input[0], input[1]);
    count1=0;
    for(i = 2; i < arr_len; i++){
        for(j=match_array.length; j >= 0; j--){
            if (input[i].indexOf(match_array[j]) == -1){
                match_array.splice(j,1);

            }
        }
    }
    counter = 0;
    for (i=0; i < match_array.length+counter; i++){
        longest = match_array[0].length
        if (match_array[i-counter].length < longest) {
            match_array.splice(i-counter,1)
            counter++
        }
    }
    var b
    var c
    toUnique(match_array,b,c)
    match_array.sort();
    return match_array.join(";")
}
</script><script type='text/vbscript'>



function goldSolution(somearray)
    goldSolution = goldjs(join(somearray,"<|>"))
end Function
